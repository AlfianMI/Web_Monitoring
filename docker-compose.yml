version: '3'
services:
  
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: app
    container_name: iot-app
    restart: unless-stopped
    tty: true
    env_file: '.env.production'
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - /var/www/vendor
      - /var/www/node_modules
      - /var/www/bootsrap/cache
      - ./:/var/www
      - ./dockerconfig/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: iot-webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./dockerconfig/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:latest
    container_name: iot-mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: ${DB_USERNAME}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./dockerconfig/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  #MQTT
  mosquitto:
    hostname: mosquitto
    image: eclipse-mosquitto:latest
    container_name: iot-mosquitto
    restart: always
    volumes:
      - ./dockerconfig/mosquitto/config/:/mosquitto/config/
    ports:
      - 1884:1883
      - 9002:9001
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local